<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>picoCTF on</title><link>https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/</link><description>Recent content in picoCTF on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/index.xml" rel="self" type="application/rss+xml"/><item><title>flag_shop</title><link>https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/flag_shop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/flag_shop/</guid><description>Link to the exercise
Steps The exercise uses a simple server application that allows buying the flag, but initially, we don&amp;rsquo;t have enough funds to do so.</description></item><item><title>GET aHEAD</title><link>https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/GET-aHEAD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/GET-aHEAD/</guid><description>Link to the exercise
Steps First, I&amp;rsquo;ve opened the &amp;ldquo;server&amp;rdquo; application. What I saw were two buttons that changed the background color on click.</description></item><item><title>HashingJobApp</title><link>https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/HashingJobApp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/HashingJobApp/</guid><description>Link to the exercise
Steps This one is about using the md5 command to get a hash for provided string.</description></item><item><title>Information</title><link>https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/Information/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/Information/</guid><description>Link to the exercise
Steps First, I&amp;rsquo;ve checked the filetype with the file cat.jpeg command to check if I&amp;rsquo;m dealing with a JPG file for sure, as I remember in the [[Matryoshka Dolls Writeup|Matryoshka doll]] exercise, the attached dolls.</description></item><item><title>mus1c</title><link>https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/mus1c/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/mus1c/</guid><description>Link to the exercise
Steps After downloading and opening the lyrics.txt I saw somewhat cryptic lyrics of the song:</description></item><item><title>plumbing</title><link>https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/plumbing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/plumbing/</guid><description>Link to the exercise
Steps This one is really easy. I just needed to dump the output of nc &amp;lt;server address and port&amp;gt; to a text file and try to find picoCTF string in it ü§∑‚Äç‚ôÇÔ∏è</description></item><item><title>PW Crack 1</title><link>https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/pw-crack-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/pw-crack-1/</guid><description>Link to the exercise
Steps I downloaded the level1.py (the script) and level1.flag.py.enc (the encrypted flag) files and opened the former with python.</description></item><item><title>PW Crack 2</title><link>https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/pw-crack-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/pw-crack-2/</guid><description>Link to the exercise
Steps I downloaded the level2.py (the script) and level2.flag.py.enc (the encrypted flag) files and opened the former with python.</description></item><item><title>PW Crack 3</title><link>https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/pw-crack-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/pw-crack-3/</guid><description>Link to the exercise
This one is similar, but a bit harder than [[cybersecurity/write-ups/picoCTF/pw-crack-1]] and [[cybersecurity/write-ups/picoCTF/pw-crack-2]].
Steps First I downloaded the files:</description></item><item><title>PW Crack 4</title><link>https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/pw-crack-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/pw-crack-4/</guid><description>Link to the exercise
This one is basically the same as [[cybersecurity/write-ups/picoCTF/pw-crack-3]], the only difference is the possible passwords count.</description></item><item><title>PW Crack 5</title><link>https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/pw-crack-5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kkoscielniak.github.io/the-garden/cybersecurity/write-ups/picoCTF/pw-crack-5/</guid><description>Link to the exercise
The final one of the PW Crack series.
Steps I began by downloading all the files and opened dictionary.</description></item></channel></rss>