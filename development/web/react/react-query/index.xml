<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>React Query on</title><link>https://koscielniak.pro/development/web/react/react-query/</link><description>Recent content in React Query on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://koscielniak.pro/development/web/react/react-query/index.xml" rel="self" type="application/rss+xml"/><item><title>Demo of React Query + YNAB</title><link>https://koscielniak.pro/development/web/react/react-query/react-query-ynab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://koscielniak.pro/development/web/react/react-query/react-query-ynab/</guid><description>I am an YNAB heavy user. While learning [[development/web/react/|React Query]] I decided to create a demo that uses YNAB API. This file describes the high-level process of the demo development and my findings.</description></item><item><title>QueryClient</title><link>https://koscielniak.pro/development/web/react/react-query/QueryClient/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://koscielniak.pro/development/web/react/react-query/QueryClient/</guid><description>Example 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import { QueryClient, QueryClientProvider } from &amp;#34;react-query&amp;#34;; import { ReactQueryDevtools } from &amp;#34;react-query/devtools&amp;#34;; /* This needs to be outside of the React App */ const queryClient = new QueryClient({); const App = () =&amp;gt; { return ( &amp;lt;QueryClientProvider client={queryClient}&amp;gt; {/* .</description></item><item><title>useMutation hook</title><link>https://koscielniak.pro/development/web/react/react-query/useMutation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://koscielniak.pro/development/web/react/react-query/useMutation/</guid><description>Used to update/create/delete data. Provides the mutate function that takes the parameters. Returns the status of our API call.
The status can be</description></item><item><title>useQuery hook</title><link>https://koscielniak.pro/development/web/react/react-query/useQuery/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://koscielniak.pro/development/web/react/react-query/useQuery/</guid><description>A hook used to fetch data in [[development/web/react/react-query/_index|React Query]].
Allows to control the state of the component depending on the retrieved data.</description></item></channel></rss>