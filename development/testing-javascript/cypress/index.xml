<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Testing with Cypress on</title><link>https://kkoscielniak.github.io/the-garden/development/testing-javascript/cypress/</link><description>Recent content in Testing with Cypress on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://kkoscielniak.github.io/the-garden/development/testing-javascript/cypress/index.xml" rel="self" type="application/rss+xml"/><item><title>Custom Cypress commands</title><link>https://kkoscielniak.github.io/the-garden/development/testing-javascript/cypress/custom-cypress-cmds/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kkoscielniak.github.io/the-garden/development/testing-javascript/cypress/custom-cypress-cmds/</guid><description>We can append commands to cy object with usage of custom commands. This can be used for making reusable assertions, making HTTP requests directly etc.</description></item><item><title>cy.request fn</title><link>https://kkoscielniak.github.io/the-garden/development/testing-javascript/cypress/cy-request-fn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kkoscielniak.github.io/the-garden/development/testing-javascript/cypress/cy-request-fn/</guid><description>We can use cy.request(req) to make HTTP calls directly from Cypress.
1 2 3 4 5 cy.request({ url: &amp;#39;http://localhost:3000/register&amp;#39;, method: &amp;#39;POST&amp;#39;, body: user, }); These requests are usually reusable and can be used as [[course-notes/testing-javascript/cypress/custom-cypress-cmds]].</description></item><item><title>Debugging tests in Cypress</title><link>https://kkoscielniak.github.io/the-garden/development/testing-javascript/cypress/debugging-tests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kkoscielniak.github.io/the-garden/development/testing-javascript/cypress/debugging-tests/</guid><description>To debug the test, we can use this Promise like syntax:
1 2 3 4 5 6 7 8 9 10 11 12 13 describe(&amp;#39;anonymous calculator&amp;#39;, () =&amp;gt; { it(&amp;#39;can make calculations&amp;#39;, () =&amp;gt; { /* [.</description></item><item><title>First test in Cypress</title><link>https://kkoscielniak.github.io/the-garden/development/testing-javascript/cypress/first-cypress-test/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kkoscielniak.github.io/the-garden/development/testing-javascript/cypress/first-cypress-test/</guid><description>[!tip] Keep in mind the tested application needs to be running in the background
1 2 3 4 5 6 7 8 9 10 describe(&amp;#39;anonymous calculator&amp;#39;, () =&amp;gt; { it(&amp;#39;can make calculations&amp;#39;, () =&amp;gt; { cy.</description></item><item><title>Fundamentals of testing with Cypress and Testing Library</title><link>https://kkoscielniak.github.io/the-garden/development/testing-javascript/cypress/configuring-cypress/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kkoscielniak.github.io/the-garden/development/testing-javascript/cypress/configuring-cypress/</guid><description>Cypress is a tool for E2E testing.
Internally Cypress is an application that runs natively on the computer, but is installed via npm/yarn.</description></item><item><title>Install React Dev Tools in Cypress</title><link>https://kkoscielniak.github.io/the-garden/development/testing-javascript/cypress/install-react-dev-tools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kkoscielniak.github.io/the-garden/development/testing-javascript/cypress/install-react-dev-tools/</guid><description>If we run Cypress in Chrome-based browser that has the React Dev Tools extension installed, we still need to register the tested app in DevTools.</description></item><item><title>Testing login flow in Cypress</title><link>https://kkoscielniak.github.io/the-garden/development/testing-javascript/cypress/testing-login-flow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kkoscielniak.github.io/the-garden/development/testing-javascript/cypress/testing-login-flow/</guid><description>The simplest form of testing the login flow would be to make Cypress register, login and logout several times:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import {userBuilder} from &amp;#39;.</description></item><item><title>Testing registration flow in Cypress</title><link>https://kkoscielniak.github.io/the-garden/development/testing-javascript/cypress/testing-registration-flow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kkoscielniak.github.io/the-garden/development/testing-javascript/cypress/testing-registration-flow/</guid><description>With E2E testing, there might be a situation we want to test a form by providing some data. However, the data we provided may already exist in the database.</description></item></channel></rss>